function [Dplus,Dminus,AD,AD_boundary] = SBPoperators_upwind(N,h,order,C_upwind,C_upwind_boundary)
  % Build upwind derivative matrices D+ and D- with interior and boundary
  % damping.
  % Also build "ordinary artificial dissipation operators" AD, AD_boundary.
    
  if nargin==1, h=1; order=2; end
  if nargin==2, order=2; end
  if nargin <=3; C_upwind = 0; end
  if nargin <= 4; C_upwind_boundary = 0; end
  
  switch order
    
   case 2
    
    Pinv = [2 ones(1,N-1) 2];
    Q = 0.5*sparse(diag([-1;zeros(N-1,1);1])...
                   +diag(ones(N,1),1)-diag(ones(N,1),-1));
    
    DD = zeros(N+1,N+1);
    d1 = [-1 1];
    DD(1,1:2) = d1;
    DD(2,1:2) = d1;
    for i=3:N
      DD(i,(i-1):i) = d1;
    end
    DD(N+1,N:(N+1)) = d1;
    
    Hinv = 1/h*spdiags(Pinv',0,N+1,N+1);
    D = sparse(Hinv*Q);
    
    %%% UPWIND %%%%
    DI= C_upwind*sparse( Hinv*(DD'*DD) );
    
    % Can be constructed if required
    DI_boundary = 0*DI;
    
    %%% Ordinary AD %%%
    AD = sparse( Hinv*(DD'*DD) );
    AD_boundary = 0*AD; %Can be constructed if required
    
   case 4
    
    if N<8,disp('N>=8 for 4th order'),return,end
    
    Pinv = [48/17 48/59 48/43 48/49 ...
            ones(1,N-7) 48/49 48/43 48/59 48/17];
    diagQ = ones(N+1,1)*[1/12 -2/3 0 2/3 -1/12];
    Q = spdiags(diagQ,(-2:2),N+1,N+1);
    Q(1:4,1:4)=[-1/2 59/96 -1/12 -1/32;-59/96 0 59/96 0;...
                1/12 -59/96 0 59/96; 1/32 0 -59/96 0];
    Q(N-2:N+1,N-2:N+1) = -rot90(Q(1:4,1:4),2);
    
    DD = zeros(N+1,N+1);
    d2 = [1 -2 1];
    DD(1,1:3) = d2;
    DD(2,1:3) = d2;
    for i=3:(N-1)
      DD(i,(i-1):(i+1)) = d2;
    end
    DD(N  ,(N-1):(N+1)) = d2;
    DD(N+1,(N-1):(N+1)) = d2;
    
    Hinv = 1/h*spdiags(Pinv',0,N+1,N+1);
    D = sparse(Hinv*Q); 
    
    %%% UPWIND %%%
    DI= C_upwind*sparse( Hinv*(DD'*DD) );
    
    % Can be constructed if required
    DI_boundary = 0*DI;
    
    %%% Ordinary AD %%%
    AD = sparse( Hinv*(DD'*DD) );
    AD_boundary = 0*AD; %Can be constructed if required
    
   case 6
    
    if N<12,disp('N>=12 for 6th order'),return,end
    
    Pinv = [43200/13649 8640/12013 4320/2711 4320/5359 8640/7877 43200/43801 ...
            ones(1,N+1-12) ...
            43200/43801 8640/7877 4320/5359 4320/2711 8640/12013 43200/13649];
    diagQ = ones(N+1,1)*[-1 9 -45 0 45 -9 1]/60;
    Q = spdiags(diagQ,(-3:3),N+1,N+1);   
    
    Q(1,1) = -1/2;
    Q(1,2) =  104009/172800;
    Q(1,3) =  30443/259200;
    Q(1,4) = -33311/86400;
    Q(1,5) =  16863/86400;
    Q(1,6) = -15025/518400;
    
    Q(2,1) = -104009/172800;
    Q(2,2) =  0;
    Q(2,3) = -311/51840;
    Q(2,4) =  20229/17280;
    Q(2,5) = -24337/34560;
    Q(2,6) =  36661/259200;
    
    Q(3,1) = -30443/259200;
    Q(3,2) =  311/51840;
    Q(3,3) =  0;
    Q(3,4) = -11155/25920;
    Q(3,5) =  41287/51840;
    Q(3,6) = -21999/86400;
    
    Q(4,1) =  33311/86400;
    Q(4,2) = -20229/17280;
    Q(4,3) =  11155/25920;
    Q(4,4) =  0;
    Q(4,5) =  4147/17280;
    Q(4,6) =  25427/259200;

    Q(5,1) = -16863/86400;
    Q(5,2) =  24337/34560;
    Q(5,3) = -41287/51840;
    Q(5,4) = -4147/17280;
    Q(5,5) =  0;
    Q(5,6) =  342523/518400;

    Q(6,1) =  15025/518400;
    Q(6,2) = -36661/259200;
    Q(6,3) =  21999/86400;
    Q(6,4) = -25427/259200;
    Q(6,5) = -342523/518400;
    Q(6,6) =  0;

    Q(N-4:N+1,N-4:N+1) = -rot90(Q(1:6,1:6),2);

    DD = zeros(N+1,N+1);
    d3 = [-1 3 -3 1];
    DD(1,1:4) = d3;
    DD(2,1:4) = d3;
    DD(3,1:4) = d3;
    for i=4:(N-2)
      DD(i,(i-2):(i+1)) = d3;
    end
    DD(N-1,(N-2):(N+1)) = d3;
    DD(N  ,(N-2):(N+1)) = d3;
    DD(N+1,(N-2):(N+1)) = d3;
    
    Hinv = 1/h*spdiags(Pinv',0,N+1,N+1);
    D = sparse(Hinv*Q); 
    
    %%% Upwind %%%
    DI= C_upwind*sparse( Hinv*(DD'*DD) );
    
    % Can be constructed if required
    DI_boundary = 0*DI;
    
    %%% Ordinary AD %%%
    AD = sparse( Hinv*(DD'*DD) );
    AD_boundary = 0*AD; %Can be constructed if required
    
   case 8

    % Use smooth damping coefficient which goes to zero at boundaries,
    % and use special boundary damping, to preserve super convergence.
    
    if N<16,disp('N>=16 for 8th order'),return,end   
       
    D_i1 = 0.800000000000000; 
    D_i2 = -0.200000000000000;  
    D_i3 = 0.038095238095238;  
    D_i4 = -0.003571428571429; 

    diagD1 = ones(N+1,1)*[-D_i4 , -D_i3, -D_i2, -D_i1, 0, D_i1, D_i2, D_i3, D_i4];
    D1 = spdiags(diagD1,(-4:4),N+1,N+1);   

    D1(1,1) = -4.6475450213316e+00;
    D1(1,2) =  6.2541786625636e+00;
    D1(1,3) = -2.4139100510440e+00;
    D1(1,4) =  1.2566395095719e+00;
    D1(1,5) = -6.4766769665992e-01;
    D1(1,6) =  2.4570663393331e-01;
    D1(1,7) = -5.2045357676976e-02;
    D1(1,8) =  4.6433206436931e-03;

    D1(2,1) = -1.0868211647678e+00;
    D1(2,2) =  0.0000000000000e+00;
    D1(2,3) =  1.5195364183857e+00;
    D1(2,4) = -6.5436679827908e-01;
    D1(2,5) =  3.1286206957080e-01;
    D1(2,6) = -1.1086808101812e-01;
    D1(2,7) =  2.1234895991755e-02;
    D1(2,8) = -1.5773398832359e-03;

    D1(3,1) =  2.6780878369504e-01;
    D1(3,2) = -9.7012354133588e-01;
    D1(3,3) =  0.0000000000000e+00;
    D1(3,4) =  9.7262296639767e-01;
    D1(3,5) = -3.6843978324227e-01;
    D1(3,6) =  1.1618593544435e-01;
    D1(3,7) = -1.8907619882972e-02;
    D1(3,8) =  8.5325892405388e-04;

    D1(4,1) = -1.2264219453174e-01;
    D1(4,2) =  3.6750449461988e-01;
    D1(4,3) = -8.5559845023345e-01;
    D1(4,4) =  0.0000000000000e+00;
    D1(4,5) =  7.9552641570539e-01;
    D1(4,6) = -2.2405034810100e-01;
    D1(4,7) =  4.2900978549802e-02;
    D1(4,8) = -3.6408960088886e-03;

    D1(5,1) =  6.8014241294556e-02;
    D1(5,2) = -1.8906569319898e-01;
    D1(5,3) =  3.4874693977150e-01;
    D1(5,4) = -8.5599853894095e-01;
    D1(5,5) =  0.0000000000000e+00;
    D1(5,6) =  7.9186344382307e-01;
    D1(5,7) = -1.9783080393206e-01;
    D1(5,8) =  3.7756538075870e-02;
    D1(5,9) = -3.4861268930073e-03;

    D1(6,1) = -2.6557903380662e-02;
    D1(6,2) =  6.8959742481719e-02;
    D1(6,3) = -1.1319486586973e-01;
    D1(6,4) =  2.4813802673085e-01;
    D1(6,5) = -8.1504122739101e-01;
    D1(6,6) =  0.0000000000000e+00;
    D1(6,7) =  8.0483962089931e-01;
    D1(6,8) = -2.0182899393713e-01;
    D1(6,9) =  3.8273766032180e-02;
    D1(6,10) = -3.5881655655168e-03;

    D1(7,1) =  5.5946228886809e-03;
    D1(7,2) = -1.3135637494343e-02;
    D1(7,3) =  1.8319851498636e-02;
    D1(7,4) = -4.7252720307139e-02;
    D1(7,5) =  2.0250470348441e-01;
    D1(7,6) = -8.0042614113573e-01;
    D1(7,7) =  0.0000000000000e+00;
    D1(7,8) =  7.9973532195798e-01;
    D1(7,9) = -1.9983539676215e-01;
    D1(7,10) =  3.8063885097553e-02;
    D1(7,11) = -3.5684892278956e-03;

    D1(8,1) = -4.9958518981227e-04;
    D1(8,2) =  9.7660369095530e-04;
    D1(8,3) = -8.2748091416587e-04;
    D1(8,4) =  4.0138390353475e-03;
    D1(8,5) = -3.8683470124513e-02;
    D1(8,6) =  2.0090351330033e-01;
    D1(8,7) = -8.0045761050338e-01;
    D1(8,8) =  0.0000000000000e+00;
    D1(8,9) =  8.0006351998859e-01;
    D1(8,10) = -2.0001587999715e-01;
    D1(8,11) =  3.8098262856599e-02;
    D1(8,12) = -3.5717121428062e-03;

    D1(N-6:N+1,N-10:N+1) = -rot90(D1(1:8,1:12),2);
    D = 1/h*D1;
    D = sparse(D);
    
    m = N+1; mmm=8;
    D4=(diag(ones(m-2,1),2)-4*diag(ones(m-1,1),1)+6*diag(ones(m,1),0)-4*diag(ones(m-1,1),-1)+diag(ones(m-2,1),-2));
    D4(1:6,1:8)=[0.70921010190504348684e1 -0.14196080536361841322e2 0.11072881931325435634e2 -0.50473576941871051066e1 0.10784552801730759259e1 0 0 0; 0.70921010190504348684e1 -0.14196080536361841322e2 0.11072881931325435634e2 -0.50473576941871051066e1 0.10784552801730759259e1 0 0 0; 0.70921010190504348684e1 -0.14196080536361841322e2 0.11072881931325435634e2 -0.50473576941871051066e1 0.10784552801730759259e1 0 0 0; 0 0.13740993382151221352e1 -0.42105600869792757010e1 0.54761010136211975317e1 -0.35797005751940657417e1 0.94006031033702177578e0 0 0; 0 0 0.82467928104463767301e0 -0.33274694995849432461e1 0.52587584638857303123e1 -0.37020511582893568152e1 0.94608291294393207601e0 0; 0 0 0 0.86436129166612654748e0 -0.37325441295306179390e1 0.57924699560798105338e1 -0.39066885960487908497e1 0.98240147783347170744e0;];
    D4(m-mmm+1:m,m-mmm+1:m)=rot90( D4(1:mmm,1:mmm) ,2 );
    
    H=diag(ones(m,1),0);
    H_U =[0.10758368078309999999e0 0 0 0 0 0 0 0; 0 0.61909685107891000003e0 0 0 0 0 0 0; 0 0 0.96971176519117000000e0 0 0 0 0 0; 0 0 0 0.11023441350947000001e1 0 0 0 0; 0 0 0 0 0.10244688965833000000e1 0 0 0; 0 0 0 0 0 0.99533550116830999995e0 0 0; 0 0 0 0 0 0 0.10008236941028000000e1 0; 0 0 0 0 0 0 0 0.99992060631812000004e0;];

    H(1:mmm,1:mmm)=H_U;
    H(m-mmm+1:m,m-mmm+1:m)=rot90( H_U(1:mmm,1:mmm) ,2 );

    H=H*h;

    L = h*N;
    B = createDampingCoefficient(m,L);
    
    %%% Upwind %%%
    DI=C_upwind*sparse( H\(D4'*B*D4) );
    
    %%% Ordinary AD %%%
    AD = sparse( H\(D4'*B*D4) );
    
    % Boundary derivative operators S_p, to produce boundary damping S_p'S_p
    % Here p=5,6,7
    
%     S_5U=[-0.82098088052411907132e1 0.18024024120655590698e2 -0.17692096674769448318e2 0.12181944917152947702e2 -0.53922764008653796295e1 0.10882128430674802600e1 0 0 0 0; -0.82098088052411907132e1 0.18024024120655590698e2 -0.17692096674769448318e2 0.12181944917152947702e2 -0.53922764008653796295e1 0.10882128430674802600e1 0 0 0 0; -0.82098088052411907132e1 0.18024024120655590698e2 -0.17692096674769448318e2 0.12181944917152947702e2 -0.53922764008653796295e1 0.10882128430674802600e1 0 0 0 0; -0.82098088052411907132e1 0.18024024120655590698e2 -0.17692096674769448318e2 0.12181944917152947702e2 -0.53922764008653796295e1 0.10882128430674802600e1 0 0 0 0; 0 -0.13913240333052950751e1 0.50983574122643719988e1 -0.89139255753021486176e1 0.89492514379851643542e1 -0.47003015516851088789e1 0.95794231004301621873e0 0 0 0; 0 0 -0.80388595981635823711e0 0.40861386922975635215e1 -0.87645974398095505205e1 0.92551278957233920380e1 -0.47304145647196603800e1 0.95763137632461357808e0 0 0; 0 0 0 -0.85214912336218661144e0 0.46656801619132724238e1 -0.96541165934663508896e1 0.97667214901219771242e1 -0.49120073891673585372e1 0.98587145396064649030e0 0; 0 0 0 0 -0.10e1 0.50e1 -0.100e2 0.100e2 -0.50e1 0.10e1;];
%     S_5=zeros(m);
%     S_5(1:8,1:10)=S_5U;
%     S_5(m-7:m,m-9:m)=flipud( -fliplr(S_5U));
%     C_upwind_boundary = 1/200; % Suitable

%     S_6U=[0.92604272237009487731e1 -0.21899951980342041757e2 0.25706973995952182034e2 -0.23795532642767976509e2 0.16176829202596138888e2 -0.65292770584048815597e1 0.10805312592656301300e1 0 0 0 0; 0.92604272237009487731e1 -0.21899951980342041757e2 0.25706973995952182034e2 -0.23795532642767976509e2 0.16176829202596138888e2 -0.65292770584048815597e1 0.10805312592656301300e1 0 0 0 0; 0.92604272237009487731e1 -0.21899951980342041757e2 0.25706973995952182034e2 -0.23795532642767976509e2 0.16176829202596138888e2 -0.65292770584048815597e1 0.10805312592656301300e1 0 0 0 0; 0.92604272237009487731e1 -0.21899951980342041757e2 0.25706973995952182034e2 -0.23795532642767976509e2 0.16176829202596138888e2 -0.65292770584048815597e1 0.10805312592656301300e1 0 0 0 0; 0 0.14058275749850312569e1 -0.59637699688344396810e1 0.13135580487711615439e2 -0.17898502875970328708e2 0.14100904655055326637e2 -0.57476538602580973124e1 0.96761398731089236944e0 0 0 0; 0 0 0.78692381135906040550e0 -0.48340889923923043812e1 0.13146896159714325781e2 -0.18510255791446784076e2 0.14191243694158981140e2 -0.57457882579476814685e1 0.96506937655440259938e0 0 0; 0 0 0 0.84209241882516286974e0 -0.55988161942959269085e1 0.14481174890199526334e2 -0.19533442980243954248e2 0.14736022167502075612e2 -0.59152287237638789418e1 0.98819842177699528293e0 0; 0 0 0 0 0.10e1 -0.60e1 0.150e2 -0.200e2 0.150e2 -0.60e1 0.10e1;];
%     S_6=zeros(m);
%     S_6(1:8,1:11)=S_6U;
%     S_6(m-7:m,m-10:m)=rot90( S_6U,2);
%     C_upwind_boundary = 1/800; % Suitable

    S_7U=[-0.10257962606384161889e2 0.25816283570514673553e2 -0.35082323899232605336e2 0.40909341259657284245e2 -0.37745934806057657407e2 0.22852469704417085459e2 -0.75637188148594109098e1 0.10718455919447922848e1 0 0 0; -0.10257962606384161889e2 0.25816283570514673553e2 -0.35082323899232605336e2 0.40909341259657284245e2 -0.37745934806057657407e2 0.22852469704417085459e2 -0.75637188148594109098e1 0.10718455919447922848e1 0 0 0; -0.10257962606384161889e2 0.25816283570514673553e2 -0.35082323899232605336e2 0.40909341259657284245e2 -0.37745934806057657407e2 0.22852469704417085459e2 -0.75637188148594109098e1 0.10718455919447922848e1 0 0 0; -0.10257962606384161889e2 0.25816283570514673553e2 -0.35082323899232605336e2 0.40909341259657284245e2 -0.37745934806057657407e2 0.22852469704417085459e2 -0.75637188148594109098e1 0.10718455919447922848e1 0 0 0; -0.10257962606384161889e2 0.25816283570514673553e2 -0.35082323899232605336e2 0.40909341259657284245e2 -0.37745934806057657407e2 0.22852469704417085459e2 -0.75637188148594109098e1 0.10718455919447922848e1 0 0 0; 0 -0.14183700945143243060e1 0.68109221539151178574e1 -0.18129991367652287552e2 0.31322380032948075240e2 -0.32902110861795762152e2 0.20116788510903340593e2 -0.67732979111762465861e1 0.97367953737208690559e0 0 0; 0 0 -0.77264857229409862775e0 0.55732122985135573041e1 -0.18405654623600056093e2 0.32392947635031872133e2 -0.33112901953037622660e2 0.20110258902816885140e2 -0.67554856358808181957e1 0.97027194845028099974e0 0; 0 0 0 -0.83355973075426177031e0 0.65319522266785813933e1 -0.20273644846279336868e2 0.34183525215426919935e2 -0.34384051724171509760e2 0.20703300533173576296e2 -0.69173889524389669805e1 0.98986727836499775519e0;];
    S_7=zeros(m);
    S_7(1:8,1:11)=S_7U;
    S_7(m-7:m,m-10:m)=flipud( -fliplr(S_7U));
%     C_upwind_boundary = 1/1600; % Suitable

    %%% Upwind %%%
    DI_boundary = C_upwind_boundary*sparse( H\(S_7'*S_7) );
    
    %%% Ordinary AD %%%
    AD_boundary = sparse( H\(S_7'*S_7) );

  end
  
  Dplus=D+DI+DI_boundary;
  Dminus=D-DI-DI_boundary;
      
      
end

  
